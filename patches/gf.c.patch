--- a/mceliece-20221023/Optimized_Implementation/kem/mceliece460896f/gf.c	2023-05-03 20:29:59.909682317 +0000
+++ b/mceliece-20221023/Optimized_Implementation/kem/mceliece460896f/gf.c	2023-05-03 20:29:59.909682317 +0000
@@ -6,7 +6,7 @@
 
 #include "params.h"
 
-gf gf_iszero(gf a)
+gf mc_gf_iszero(gf a)
 {
 	uint32_t t = a;
 
@@ -16,12 +16,12 @@
 	return (gf) t;
 }
 
-gf gf_add(gf in0, gf in1)
+gf mc_gf_add(gf in0, gf in1)
 {
 	return in0 ^ in1;
 }
 
-gf gf_mul(gf in0, gf in1)
+gf mc_gf_mul(gf in0, gf in1)
 {
 	int i;
 
@@ -51,7 +51,7 @@
 
 /* input: field element in */
 /* return: (in^2)^2 */
-static inline gf gf_sq2(gf in)
+static inline gf mc_gf_sq2(gf in)
 {
 	int i;
 
@@ -84,7 +84,7 @@
 
 /* input: field element in, m */
 /* return: (in^2)*m */
-static inline gf gf_sqmul(gf in, gf m)
+static inline gf mc_gf_sqmul(gf in, gf m)
 {
 	int i;
 
@@ -122,7 +122,7 @@
 
 /* input: field element in, m */
 /* return: ((in^2)^2)*m */
-static inline gf gf_sq2mul(gf in, gf m)
+static inline gf mc_gf_sq2mul(gf in, gf m)
 {
 	int i;
 
@@ -163,25 +163,25 @@
 
 /* input: field element den, num */
 /* return: (num/den) */
-gf gf_frac(gf den, gf num)
+gf mc_gf_frac(gf den, gf num)
 {
 	gf tmp_11;
 	gf tmp_1111;
 	gf out;
 
-	tmp_11 = gf_sqmul(den, den); // ^11
-	tmp_1111 = gf_sq2mul(tmp_11, tmp_11); // ^1111
-	out = gf_sq2(tmp_1111); 
-	out = gf_sq2mul(out, tmp_1111); // ^11111111
-	out = gf_sq2(out);
-	out = gf_sq2mul(out, tmp_1111); // ^111111111111
+	tmp_11 = mc_gf_sqmul(den, den); // ^11
+	tmp_1111 = mc_gf_sq2mul(tmp_11, tmp_11); // ^1111
+	out = mc_gf_sq2(tmp_1111); 
+	out = mc_gf_sq2mul(out, tmp_1111); // ^11111111
+	out = mc_gf_sq2(out);
+	out = mc_gf_sq2mul(out, tmp_1111); // ^111111111111
 
-	return gf_sqmul(out, num); // ^1111111111110 = ^-1
+	return mc_gf_sqmul(out, num); // ^1111111111110 = ^-1
 }
 
-gf gf_inv(gf den)
+gf mc_gf_inv(gf den)
 {
-	return gf_frac(den, ((gf) 1));
+	return mc_gf_frac(den, ((gf) 1));
 }
 
 /* input: in0, in1 in GF((2^m)^t)*/
@@ -197,16 +197,16 @@
 
 	for (i = 0; i < SYS_T; i++)
 		for (j = 0; j < SYS_T; j++)
-			prod[i+j] ^= gf_mul(in0[i], in1[j]);
+			prod[i+j] ^= mc_gf_mul(in0[i], in1[j]);
 
 	//
  
 	for (i = (SYS_T-1)*2; i >= SYS_T; i--)
 	{
-		prod[i - SYS_T + 7] ^= prod[i];
-		prod[i - SYS_T + 2] ^= prod[i];
-		prod[i - SYS_T + 1] ^= prod[i];
-		prod[i - SYS_T + 0] ^= prod[i];
+		prod[i - SYS_T + 10] ^= prod[i];
+		prod[i - SYS_T +  9] ^= prod[i];
+		prod[i - SYS_T +  6] ^= prod[i];
+		prod[i - SYS_T +  0] ^= prod[i];
 	}
 
 	for (i = 0; i < SYS_T; i++)
